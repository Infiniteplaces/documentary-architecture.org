{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../site/plugins/frontend/assets/src/liebling-house/world.svelte",
    "../../site/plugins/frontend/assets/src/views/collection.svelte",
    "../../site/plugins/frontend/assets/src/views/audio.svelte",
    "../../site/plugins/frontend/assets/src/views/map.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n\texport let view;\n\texport let classname;\n\n\timport {replaceContent} from './replaceContent.js';\n\timport LoadScript from '../helpers/loadScript.svelte';\n\n\tconst dependencies = [\n\t\tview.content.unityLoader || \"https://documentary-architecture.fra1.digitaloceanspaces.com/cda/assets/liebling-house/Build/UnityLoader.js\"\n\t];\n\n\tconsole.log( dependencies );\n\n\t/*\n\n\tview.content\n\t\tworlditemStart: worlditem\n\t\tworlditemsList: ./i/liebling-house/worlditems.json\n\t\tunityLoader:    ./Build/UnityLoader.js\n\t\tunityJson:      ./Build/liebling-house-world.json\n\n\tworld.state\n\t\tViewingKiosk     // rotating building at the beginning of program -> explore\n\t\tViewingDollhouse // DHV -> explore\n\t\tViewingItem      // camera fixed in hotspot -> explore + dollhouse\n\t\tViewingPlatform  // world deactivated (controls remain from previous state)\n\t\tFreeRoaming      // walking in wolrd -> dollhouse\n\t\tMovingToItem     // automated walk to destination -> stop + dollhouse\n\n\t*/\n\n\tvar world = {\n\t\tloaded: false,\n\t\tprogress: 0,\n\n\t\ttooltips: {\n\t\t\titem: false,\n\t\t\thelp: false\n\t\t},\n\t\troaming: \"Start exploring\",\n\t\tdollhouse: false,\n\t\thelp: \"Click on the builing to start exploring.\",\n\t\tstate: 'ViewingKiosk',\n\t\tstates: {\n\t\t\tViewingKiosk: {\n\t\t\t\troaming: false,\n\t\t\t\tdollhouse: false,\n\t\t\t\thelp: \"Click on the builing to start exploring.\"\n\t\t\t},\n\t\t\tViewingDollhouse: {\n\t\t\t\troaming: \"Continue exploring\",\n\t\t\t\tdollhouse: false,\n\t\t\t\thelp: \"Drag to rotate building or click on one of the highlighted spots.\"\n\t\t\t},\n\t\t\tViewingItem: {\n\t\t\t\troaming: false,\n\t\t\t\tdollhouse: true,\n\t\t\t\thelp: \"Click to start exploring.\"\n\t\t\t},\n\t\t\tFreeRoaming: {\n\t\t\t\troaming: false,\n\t\t\t\tdollhouse: true,\n\t\t\t\thelp: \"Use W A S D to navigate and ← ↑ ↓ → to rotate camera.\"\n\t\t\t},\n\t\t\tMovingToItem: {\n\t\t\t\troaming: \"Stop\",\n\t\t\t\tdollhouse: false,\n\t\t\t\thelp: false\n\t\t\t}\n\t\t}\n\t};\n\n\timport { onDestroy } from 'svelte';\n\tonDestroy(() => {\n\t\tlieblingHouseWorldInstance.Quit(function() {\n\t\t    console.log(\"done!\");\n\t\t});\n\t\tlieblingHouseWorldInstance = null;\n\t});\n\t/*\n\t* load and ini world\n\t*/\n\tfunction unityInit(){\n\n\t\t// return;\n\n\t\t// https://docs.unity3d.com/Manual/webgl-templates.html\n\t\tlieblingHouseWorldContainer = document.getElementById('worldContainer');\n\t\tlieblingHouseWorldInstance = UnityLoader.instantiate(\n\t\t\tlieblingHouseWorldContainer,\n\t\t\tview.content.unityJson,\n\t\t\t{ onProgress: UnityProgress }\n\t\t);\n\n\t};\n\tfunction UnityProgress(lieblingHouseWorldInstance, progress) {\n\n\t\tif (!lieblingHouseWorldInstance.Module) {\n\t\t\treturn;\n\t\t}\n\n\t\tworld.progress = Math.round( progress*100 );\n\n\t\tif (progress === 1 && !lieblingHouseWorldInstance.removeTimeout) {\n\t\t\tlieblingHouseWorldInstance.removeTimeout = setTimeout(function() {\n\n\t\t\t\tworld.loaded = true;\n\t\t\t\tconsole.log('Unity loaded');\n\n\t\t\t}, 3000);\n\t\t}\n\n\t}\n\n\t/*\n\t* control world -> website\n\t*/\n\twindow.onWorldReady = () => {\n\t\tconsole.log( 'onWorldReady()' );\n\n\t\tif( view.content.worlditemStart ){\n\t\t\tconsole.log( 'could navigate to \"'+view.content.worlditemStart+'\"' );\n\t\t\tsetTimeout(function(){\n\t\t\t\tlieblingHouseWorldInstance.SendMessage('GameManager', 'TeleportToItem', view.content.worlditemStart );\n\t\t\t}, 3001);\n\t\t} else {\n\t\t\tworldSetState('Kiosk');\n\t\t}\n\n\t}\n\twindow.worldUpdateState = state => {\n\t\tconsole.log('worldUpdateState( ' + state + ' )' );\n\n\t\tif( state == 'ViewingPlatform' ){\n\t\t\treturn;\n\t\t}\n\n\t\tworld.state = state;\n\n\t\tworld.roaming = world.states[ state ].roaming;\n\t\tworld.dollhouse = world.states[ state ].dollhouse;\n\t\tworld.help = world.states[ state ].help;\n\n\t}\n\twindow.worldHoverItem = worlditemId => {\n\t\tif( worlditemId == '' ){\n\t\t\t// console.log('worldHoverItem() mouse leave');\n\t\t\tworld.tooltips.item = false;\n\t\t} else {\n\t\t\tconsole.log( 'worldHoverItem( ' + worlditemId + ' )' );\n\t\t\tworld.tooltips.item = worlditemId;\n\t\t}\n\t\t// maybe highlight collection elements by id?\n\t\treturn true;\n\t}\n\twindow.worldSelectItem = worlditemId => {\n\t\tif( worlditemId == '' ){\n\t\t\tconsole.log('worldSelectItem() no selection');\n\t\t\treturn false;\n\t\t}\n\t\t/* will directly navigate to this entity */\n\t\tconsole.log('worldSelectItem( ' + worlditemId + ' )');\n\t\tshowWorlditemContent( worlditemId );\n\t\treturn true;\n\t}\n\twindow.worldSelectTourstopOfItem = tourstopId => {\n\t\tif( tourstopId == '' ){\n\t\t\tconsole.log('worldSelectTourstopOfItem() no selection');\n\t\t\treturn false;\n\t\t}\n\t\t/* will navigate to tourstop within world */\n\t\tconsole.log('worldSelectTourstopOfItem( ' + tourstopId + ' )');\n\t\tnaviFromWorld( tourstopId );\n\t\treturn true;\n\t}\n\twindow.showWorlditemContent = async worlditemId => {\n\n\t\tvar href = window.location.origin + '/' + worlditemId;\n\t\tconsole.log( 'showWorlditemContent()', href );\n\n\t\treplaceContent( href, {}, true);\n\n\t}\n\t/*\n\t* control website -> world\n\t*/\n\twindow.goThroughGlass = event => {\n\t\tconsole.log('went through glass');\n\t\tworldSetState('FreeRoaming');\n\t}\n\twindow.goToItem = itemName => {\n\t\tconsole.log('goToItem('+itemName+')');\n\t\tlieblingHouseWorldInstance.SendMessage('GameManager', 'GoToItem', itemName );\n\t}\n\twindow.teleportToItem = itemName => {\n\t\tconsole.log('teleportToItem('+itemName+')');\n\t\tlieblingHouseWorldInstance.SendMessage('GameManager', 'TeleportToItem', itemName );\n\t}\n\tfunction worldSetState( state ){\n\t\tswitch (state) {\n\t\t\tcase 'Kiosk':\n\t\t\tcase 'Dollhouse':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tstate = 'FreeRoaming';\n\t\t}\n\t\tconsole.log( state );\n\t\tlieblingHouseWorldInstance.SendMessage('GameManager', state );\n\t}\n\twindow.worldSetState = state => {\n\t\tworldSetState( state );\n\t}\n\tfunction canvasClick(){\n\t\tif( world.state !== 'FreeRoaming '){\n\t\t\tworldSetState('FreeRoaming');\n\t\t}\n\t}\n</script>\n\n<style>\n\t.hover {\n\t\t/* cursor: help; */\n\t\tbackground-color: #66f;\n\t}\n\t.section--content {\n\t\tposition: relative;\n\t}\n\t.is-loading {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-color: #000;\n\t\t/* z-index: 30; */\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\t.is-loading:after {\n\t\tbackground-color: #fff;\n\t}\n</style>\n\n<LoadScript on:loaded={unityInit} dependencies={dependencies}/>\n\n<section class=\"{classname} {view.type}\">\n\n\t<div class=\"section--content\" id=\"view-liebling-house\">\n\t\t<div id=\"worldContainer\" class=\"presentation-container\" on:click=\"{canvasClick}\"></div>\n\t\t{#if world.loaded === false }\n\t\t\t<div class=\"is-loading\"></div>\n\t\t{/if}\n\t</div>\n\n\t<div class=\"bar controls section--controls {world.tooltips.item ? 'hover' : ''}\" id=\"view-liebling-house-controls\">\n\t\t{#if world.loaded === false }\n\t\t\t<span class=\"message\">Loading {world.progress}% ... Please wait.</span>\n\t\t{:else}\n\n\t\t\t{#if world.tooltips.item !== false}\n\t\t\t\t<span class=\"message\">{world.tooltips.item}</span>\n\t\t\t{:else if world.help !== false }\n\n\t\t\t\t<span class=\"message\">{world.help}</span>\n\n\t\t\t\t<span class=\"right\">\n\t\t\t\t\t{#if world.roaming }\n\n\t\t\t\t\t\t<button on:click={() => worldSetState('FreeRoaming')}>{world.roaming}</button>\n\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#if world.dollhouse }\n\n\t\t\t\t\t\t<button on:click={() => worldSetState('Dollhouse')}>Overview</button>\n\n\t\t\t\t\t{/if}\n\t\t\t\t</span>\n\n\t\t\t{/if}\n\n\t\t{/if}\n\n\t</div>\n\n</section>\n",
    "<script>\n\timport { afterUpdate } from 'svelte';\n\timport { loadData } from '../router/loadData.js';\n\n\texport let transcript = false;\n\texport let view;\n\texport let classname;\n\n\texport let controls = false;\n\texport let columns = view.columns || 2;\n\n\timport CollectionCards from '../components/collection/cards.svelte';\n\timport CollectionList from '../components/collection/list.svelte';\n\timport CollectionsGallery from '../components/collection/gallery.svelte';\n\tlet layouts = {\n\t\tcards: CollectionCards,\n\t\tlist: CollectionList,\n\t\tgallery: CollectionsGallery\n\t}\n\texport let layout = 'cards';\n\tafterUpdate(() => {\n\t\tif( \"layout\" in view ){\n\t\t\tlayout = view.layout;\n\t\t}\n\t});\n\n\tlet loading = false;\n\n\tasync function loadNext(){\n\t\t\n\t\tloading = true;\n\n\t\tlet data = await loadData( view.next );\n\n\t\tif( data ){\n\n\t\t\tloading = false;\n\t\t\tview.next = data.next;\n\t\t\tview.content = view.content.concat( data.content );\n\n\t\t}\n\t}\n\n\tlet pageHeight = 100;\n\tlet offset = 4000;\n\tlet container = 0;\n\tlet scrollPos = 0;\n\n\tfunction scrollTrigger(){\n\t\tif( view.next === false || loading === true ){\n\t\t\treturn;\n\t\t}\n\t\tscrollPos = container.scrollTop;\n\t\tif( scrollPos > ( pageHeight - offset ) ){\n\n\t\t\tloadNext();\n\n\t\t}\n\t}\n\n</script>\n\n<style>\n\t.section--content {\n\t\tdisplay: block;\n\t}\n</style>\n\n<section class=\"{classname} {view.type}\" on:scroll|passive={scrollTrigger} bind:this={container}>\n\n\t<!--<h3 class=\"section--header\">\n\t\t{ view.headline }\n\t</h3>-->\n\n\t<div class=\"section--content\" bind:clientHeight={ pageHeight }>\n\n\t\t<svelte:component this={layouts[layout]} list={view.content} {columns}/>\n\n\t\t{#if view.next || loading === true}\n\t\t\t<div class=\"load-more\">\n\t\t\t\t{#if loading === true}\n\t\t\t\t\t<div class=\"is-loading\"></div>\n\t\t\t\t{:else}\n\t\t\t\t\t<button class=\"card\" on:click={loadNext}>Load more</button>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t{/if}\n\n\t</div>\n\n\t{#if controls }\n\t\t<div class=\"bar controls\">\n\n\t\t\t<div class=\"left display\">\n\t\t\t\t<span>Display as:</span>\n\t\t\t\t<button on:click=\"{() => layout = 'cards'}\">Cards</button>\n\t\t\t\t<button on:click=\"{() => layout = 'list'}\">List</button>\n\t\t\t</div>\n\n\t\t\t<div class=\"right info\">\n\t\t\t\t<span>{view.total} Results</span>\n\t\t\t</div>\n\n\t\t</div>\n\t{/if}\n\n</section>\n",
    "<script>\n\n\timport { beforeUpdate } from 'svelte';\n\n\texport let view;\n\n\timport Transcript from './transcript.svelte';\n\texport let transcript;\n\n\texport let classname = 'preview';\n\n\tbeforeUpdate(() => {\n\t\tif( mediaElement === false ){\n\t\t\treturn;\n\t\t}\n\t\tmediaElement.pause();\n\t});\n\n\tlet mediaElement = false;\n\n</script>\n\n<style>\n\t.section--content {\n\t\tpadding: 1rem;\n\t\talign-items: flex-end;\n\t}\n\taudio {\n\t\twidth: 100%;\n\t\toutline: none;\n\t}\n</style>\n\n<section class=\"{classname} {view.type} {transcript ? '' : 'center'}\">\n\n\t<!--<h3 class=\"section--header\">\n\t\t{ view.headline || 'Audio' }\n\t</h3>-->\n\n\t<div class=\"section--content\">\n\n\t\t<audio width=\"100%\" height=\"auto\" controls bind:this={mediaElement} preload=\"meta\" src=\"{view.content.url}\">\n\t\t</audio>\n\n\t</div>\n\n\t{#if transcript}\n\t\t<Transcript transcript={transcript} />\n\t{/if}\n\n</section>\n",
    "<script>\n\timport LoadScript from '../helpers/loadScript.svelte';\n\tconst dependencies = [\n\t\t\"https://api.mapbox.com/mapbox-gl-js/v1.2.0/mapbox-gl.js\"\n\t];\n\n\texport let view;\n\texport let classname;\n\n\t/*\n\t* mapbox api\n\t* https://docs.mapbox.com/mapbox-gl-js/api/\n\t* someone mixed up lat <-> lon, i dont know, just try, error, fix\n\t*/\n\n\tvar map;\n\n\tlet mapPositions = {\n\t\tlat: 25,\n\t\tlon: 30,\n\t\tzoom: 1\n\t};\n\n\tconst mapstyles = {\n\t\tdark: 'mapbox://styles/moriwaan/cjzqsxone04y21ctdxp1dgogb',\n\t\tlight: 'mapbox://styles/moriwaan/ck3njz1ds2lgm1cqp2poywa3i'\n\t};\n\n\tlet loaded = false;\n\n\tlet popups = {\n\t\tvisible: false,\n\t\tthreshold: 16,\n\t\telements: [],\n\t\tshow: function(){\n\n\t\t\tconsole.log('show()');\n\n\t\t\tlet els = this.elements;\n\n\t\t\tview.content.forEach(function(marker) {\n\n\t\t\t\tlet item = marker.properties;\n\t\t\t\tlet html = '<li class=\"card\">'+\n\t\t\t\t\t'<a onclick=\"navi(event)\" href=\"'+item.url+'\" data-template=\"'+item.template+'\">';\n\t\t\t\t\t\tif(item.thumbnail){\n\t\t\t\t\t\t\thtml +='<figure>' + item.thumbnail + '</figure>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\thtml += '<div class=\"title\">';\n\t\t\t\t\t\t\thtml += '<span class=\"count\">' + ( item.count || 1 ) + '</span>';\n\t\t\t\t\t\t\thtml += '<h4>'+item.title+'</h4>';\n\t\t\t\t\t\thtml += '</div>';\n\t\t\t\t\thtml += '</a>';\n\t\t\t\thtml += '</li>';\n\n\t\t\t\tvar popup = new mapboxgl.Popup({ closeOnClick: false, closeButton: false, anchor: 'bottom-left' })\n\t\t\t\t\t.setLngLat( marker.geometry.coordinates )\n\t\t\t\t\t.setHTML( html )\n\t\t\t\t\t.addTo( map );\n\t\t\t\tels.push( popup );\n\n\t\t\t});\n\t\t\tthis.visible = true;\n\n\t\t},\n\t\thide: function(){\n\t\t\tfor (const popup of this.elements) {\n\t\t\t\tpopup.remove();\n\t\t\t}\n\t\t\tthis.elements = [];\n\t\t\tthis.visible = false;\n\t\t}\n\t};\n\n\tfunction mapInit(){\n\n\t\tconsole.log('mapInit');\n\n\t\tmapboxgl.accessToken = 'pk.eyJ1IjoibW9yaXdhYW4iLCJhIjoiY2l4cnIxNTFvMDAzZjJ3cGJ6MmpiY2ZmciJ9.KnmjmhWCBzMm-D30JdnnXg';\n\n\t\tmap = new mapboxgl.Map({\n\t\t\tcontainer: 'map',\n\t\t\tstyle: mapstyles.light,\n\t\t\tcenter: [ mapPositions.lon, mapPositions.lat ],\n\t\t\tzoom: mapPositions.zoom\n\t\t});\n\n\t\tmap.on('load', function() {\n\n\t\t\tmap.addSource(\"buildings\", {\n\t\t\t\t\"type\": \"geojson\",\n\t\t\t\t\"data\": {\n\t\t\t\t\t\"type\": \"FeatureCollection\",\n\t\t\t\t\t\"features\": view.content\n\t\t\t\t},\n\t\t\t\tcluster: true,\n\t\t\t\tclusterMaxZoom: 7, // Max zoom to cluster points on\n\t\t\t\tclusterRadius: 24 // Radius of each cluster when clustering points\n\t\t\t});\n\n\t\t\tmap.addLayer({\n\t\t\t\t\"id\": \"dots\",\n\t\t\t\t\"type\": \"circle\",\n\t\t\t\t\"source\": \"buildings\",\n\t\t\t\t\"filter\": [\"==\", \"$type\", \"Point\"],\n\t\t\t\t\"paint\": {\n\t\t\t\t\t'circle-radius': {\n\t\t\t\t\t\t'base': 5,\n\t\t\t\t\t\t// adjust radius to zoom level [[zoom, radius],...]\n\t\t\t\t\t\t'stops': [ [2, 18], [6, 12], [8, 5], [10, 4], [13, 4], [16, 8], [22, 180] ]\n\t\t\t\t\t},\n\t\t\t\t\t'circle-color': '#00f'\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tloaded = true;\n\n\t\t});\n\n\t\tmap.on('move', function (e) {\n\t\t\tvar center = map.getCenter();\n\t\t\tmapPositions.lat = round( center.lat );\n\t\t\tmapPositions.lon = round( center.lng );\n\t\t});\n\n\t\tmap.on('zoom', function (e) {\n\t\t\tvar zoom = map.getZoom();\n\t\t\tmapPositions.zoom = round( zoom, 0 );\n\n\t\t\tif( zoom > popups.threshold && popups.visible === false ){\n\t\t\t\tpopups.show();\n\t\t\t} else if( zoom < popups.threshold && popups.visible === true ){\n\t\t\t\tpopups.hide();\n\t\t\t}\n\n\t\t});\n\n\t\tmap.on('mouseenter', 'dots', function () {\n\t\t\tmap.getCanvas().style.cursor = 'pointer';\n\t\t});\n\t\tmap.on('mouseleave', 'dots', function () {\n\t\t\tmap.getCanvas().style.cursor = '';\n\t\t});\n\n\t\tmap.on('click', 'dots', function (e) {\n\t\t\tvar features = map.queryRenderedFeatures(e.point, { layers: ['dots'] });\n\t\t\tconsole.log( features[0] );\n\t\t\tvar cluster_id = features[0].properties.cluster_id;\n\t\t\tif( cluster_id !== undefined ){\n\t\t\t\tmap.getSource('buildings').getClusterExpansionZoom(cluster_id, function (err, zoom) {\n\t\t\t\t\t\tif (err){ return; }\n\t\t\t\t\tmap.easeTo({\n\t\t\t\t\t\tcenter: features[0].geometry.coordinates,\n\t\t\t\t\t\tzoom: zoom\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet zoomTo = map.getZoom() + 3;\n\t\t\t\tif( zoomTo > 10 ){\n\t\t\t\t\tzoomTo = popups.threshold + 0.2;\n\t\t\t\t}\n\t\t\t\tmap.easeTo({\n\t\t\t\t\tcenter: features[0].geometry.coordinates,\n\t\t\t\t\tzoom: zoomTo\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t};\n\n\tfunction round( f, d = 2 ){\n\t\t// round coords\n\t\treturn f.toFixed(d);\n\t}\n\n</script>\n\n<style>\n\t#map {\n\t\theight: 100%;\n\t}\n\n\t/* Marker tweaks */\n\n\t#map :global(.mapboxgl-popup-content) {\n\t\tbackground-color: transparent;\n\t\tborder-radius: 0;\n\t\tpadding: 0;\n\t}\n\n\t#map :global(.mapboxgl-popup > .mapboxgl-popup-tip) {\n\t\tdisplay: none;\n\t}\n\n</style>\n\n<LoadScript on:loaded={mapInit} dependencies={dependencies}/>\n<svelte:head>\n\t<link href=\"https://api.mapbox.com/mapbox-gl-js/v1.2.0/mapbox-gl.css\" rel=\"stylesheet\">\n</svelte:head>\n\n<section class=\"{classname} {view.type}\">\n\n\t<!--<h3 class=\"section--header\">\n\t\t{ view.headline || 'Map' }\n\t</h3>-->\n\n\t<div class=\"section--content\">\n\t\t<div id='map' style='width: 100%; height: 100%;'></div>\n\t</div>\n\n\t<div class=\"section--controls bar controls\" id=\"map-controls\">\n\t\t{#if loaded === false }\n\t\t\t<span class=\"message\">Loading...</span>\n\t\t{:else}\n\t\t\t<span class=\"right\">\n\t\t\t\t<span class=\"map-position\">{mapPositions.lat}, {mapPositions.lon}, {mapPositions.zoom}</span>\n\t\t\t</span>\n\t\t{/if}\n\t</div>\n\n</section>\n"
  ],
  "names": [],
  "mappings": "AA6NC,MAAM,eAAC,CAAC,AAEP,gBAAgB,CAAE,IAAI,AACvB,CAAC,AACD,iBAAiB,eAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,AACnB,CAAC,AACD,WAAW,eAAC,CAAC,AACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,CAEtB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,AACR,CAAC,AACD,0BAAW,MAAM,AAAC,CAAC,AAClB,gBAAgB,CAAE,IAAI,AACvB,CAAC;AChLD,iBAAiB,eAAC,CAAC,AAClB,OAAO,CAAE,KAAK,AACf,CAAC;AC1CD,iBAAiB,cAAC,CAAC,AAClB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,QAAQ,AACtB,CAAC,AACD,KAAK,cAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,AACd,CAAC;ACoJD,IAAI,eAAC,CAAC,AACL,MAAM,CAAE,IAAI,AACb,CAAC,AAID,mBAAI,CAAC,AAAQ,uBAAuB,AAAE,CAAC,AACtC,gBAAgB,CAAE,WAAW,CAC7B,aAAa,CAAE,CAAC,CAChB,OAAO,CAAE,CAAC,AACX,CAAC,AAED,mBAAI,CAAC,AAAQ,qCAAqC,AAAE,CAAC,AACpD,OAAO,CAAE,IAAI,AACd,CAAC"
}